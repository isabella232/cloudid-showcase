apply plugin: "base"
apply plugin: "jacoco"
apply plugin: "org.sonarqube"


buildscript {
    ext {
        springBootVersion = "2.0.0.RELEASE"
    }

    repositories {
        maven { url "http://repo.spring.io/plugins-release" }
    }

    dependencies {
        classpath "io.spring.gradle:propdeps-plugin:0.0.9.RELEASE"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

def allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"

sonarqube {
    properties {
        property "sonar.jacoco.reportPaths", allTestCoverageFile
        property "sonar.projectName", "Cloud Id Showcase"

        property "sonar.exclusions", "**/*Generated.java, build/generated/**"

        property "sonar.issue.ignore.multicriteria", "e1,e2,e3"

        // Rule attempts to enforce consistent logger field names, but is broken as it also triggers on variables.
        property "sonar.issue.ignore.multicriteria.e1.ruleKey", "squid:S1312"
        property "sonar.issue.ignore.multicriteria.e1.resourceKey", "**"

        // Rule disallows wildcard import which clashes with IntelliJ presets
        property "sonar.issue.ignore.multicriteria.e2.ruleKey", "squid:S2208"
        property "sonar.issue.ignore.multicriteria.e2.resourceKey", "**"

        // Rule attempts to identify hardcoded passwords by identifying certain field names
        // but produces massive amounts of false positives
        property "sonar.issue.ignore.multicriteria.e3.ruleKey", "squid:S2068"
        property "sonar.issue.ignore.multicriteria.e3.resourceKey", "**"
    }
}


task jacocoMergeTest(type: JacocoMerge) {
    destinationFile = file(allTestCoverageFile)
    executionData = project.fileTree(dir: '.', include:'**/build/jacoco/test.exec')
}

task jacocoMerge(dependsOn: ['jacocoMergeTest']) {
    // used to run the other merge tasks
}

allprojects {
    group = "de.qaware.cloudid"
    version = "0.1-SNAPSHOT"

    repositories {
        mavenCentral()
    }
}

subprojects {
    ext {
        lombokVersion = "1.16.20"
    }

    apply plugin: "propdeps"
    apply plugin: "groovy"
    apply plugin: "jacoco"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        // Lombok
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

        // Spock tests
        testCompile "org.codehaus.groovy:groovy-all:2.4.13"
        testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
        testRuntime "net.bytebuddy:byte-buddy:1.6.5"
        testRuntime "org.objenesis:objenesis:2.5.1"

        // WireMock
        // Use standalone as WireMock depends on an outdated version of Jetty that clashes with Spring Boot
        testCompile "com.github.tomakehurst:wiremock-standalone:2.14.0"
    }

    sonarqube {
        properties {
            property "sonar.jacoco.reportPath", allTestCoverageFile
        }
    }

}
