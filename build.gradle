buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.17.2"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.4.0'
    }
}
plugins {
    id "org.sonarqube" version "2.6"
}
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: "com.palantir.docker"
apply plugin: 'com.google.protobuf'
apply plugin: 'com.google.osdetector'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Edgware.RELEASE'
    grpcVersion = '1.5.0'
    nettyVersion = '4.1.12.Final'
    nettyTcnativeVersion = '2.0.5.Final'
}

dependencies {
    //compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'org.apache.httpcomponents:httpclient:4.5.4'

    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "com.google.api.grpc:googleapis-common-protos:0.0.3"
    compile "io.netty:netty-transport-native-epoll:${nettyVersion}:linux-x86_64"
    compile "io.netty:netty-transport-native-kqueue:${nettyVersion}:osx-x86_64"
    compile "io.netty:netty-tcnative-boringssl-static:${nettyTcnativeVersion}"
    compile 'org.bouncycastle:bcprov-jdk15on:1.59'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.59'
    compile 'org.apache.commons:commons-lang3:3.7'
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jar {
    archiveName "${project.name}.jar"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.3.0"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {

            }
        }
    }
}

jacoco {
    toolVersion = "0.8.0"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
docker {
    name "artifactory.qaware.de/cloud-id/demo-server"
    tags 'latest'
    dockerfile project.file('src/main/docker/Dockerfile')
    files jar.archivePath
}
docker.dependsOn(assemble)

sonarqube {
    properties {
        property "sonar.exclusions", "**/*Generated.java, build/generated/**"
        projects "sonar.projectName", "Cloud ID SPIRE Demo-Server"
    }
}
